name: Build images

on: [push]

jobs:
  build_images:
    name: Build images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
        union-version: ["0.1.80b0"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile
          platforms: linux/amd64
          tags: localhost:30000/union-python-sdk:latest
          outputs: type=docker,dest=union-python-sdk.tar
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            UNION_VERSION=${{ matrix.union-version }}

      - name: Upload single binary image
        uses: actions/upload-artifact@v4
        with:
          name: union-python-sdk
          path: union-python-sdk.tar

  run_image:
    name: Upload images
    runs-on: ubuntu-latest
    needs: [build_images]
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        python-version: ["3.8", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: images
          pattern: union-python-sdk
          merge-multiple: true

      - name: Load docker images
        run: |
          docker image load -i images/union-python-sdk.tar

      - uses: unionai/flytectl-setup-action@v0.0.3
      - name: Setup sandbox
        run: |
          mkdir -p ~/.flyte/sandbox
          cat << EOF > ~/.flyte/sandbox/config.yaml
          task_resources:
            defaults:
              cpu: 500m
              memory: 500Mi
            limits:
              cpu: 2
              memory: 4Gi
          EOF
          flytectl demo start

      - name: Upload runtime image for testing
        run: |
          docker image push localhost:30000/union-python-sdk:latest

      - name: Set up uv
        run: |
          curl -LsSf https://astral.sh/uv/0.3.5/install.sh | sh

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup python environment
        run: |
          uv pip install --system -r tests-requirements.txt

      - name: Setup python environment
        run: |
          pytest tests/test_hello_world.py
